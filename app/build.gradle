plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.protobuf' version '0.8.19'
    id 'org.jetbrains.dokka'
    id 'kover'
}

android {
    compileSdk 32

    defaultConfig {
        applicationId "com.example.cosc345project"
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }
    composeOptions {
        kotlinCompilerExtensionVersion = "1.3.0-rc01"
    }
    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
        compose true
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
    // Allow us to use AppSearch's search suggestions API
    lintOptions {
        disable 'RestrictedApi'
    }
}

kapt {
    correctErrorTypes true
}

hilt {
    enableAggregatingTask = true
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.21.4"
    }

    // Generates the java Protobuf-lite code for the Protobufs in this project. See
    // https://github.com/google/protobuf-gradle-plugin#customizing-protobuf-compilation
    // for more information.
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                java {
                    option 'lite'
                }
            }
        }
    }
}

dependencies {
    implementation 'androidx.window:window:1.0.0'
    def lifecycle_version = "2.5.1"
    def work_version = "2.7.1"

    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.4.2'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'

    implementation "androidx.compose.ui:ui:$compose_version"
    implementation 'androidx.compose.material3:material3:1.0.0-alpha15'
    implementation 'androidx.compose.material3:material3-window-size-class:1.0.0-alpha15'
    implementation "androidx.compose.ui:ui-tooling-preview:$compose_version"
    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$compose_version"
    debugImplementation "androidx.compose.ui:ui-tooling:$compose_version"
    debugImplementation "androidx.compose.ui:ui-test-manifest:$compose_version"
    implementation "androidx.compose.runtime:runtime-livedata:$compose_version"
    implementation "androidx.compose.material:material-icons-extended:$compose_version"

    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    implementation 'androidx.activity:activity-compose:1.5.1'

    implementation "com.google.dagger:hilt-android:2.43"
    kapt "com.google.dagger:hilt-compiler:2.43"

    testImplementation 'com.google.dagger:hilt-android-testing:2.43'
    kaptTest 'com.google.dagger:hilt-compiler:2.43'

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    implementation platform('com.google.firebase:firebase-bom:30.3.1')
    implementation 'com.firebaseui:firebase-ui-auth:8.0.1'
    implementation 'com.google.firebase:firebase-database-ktx'
    // Fix for https://stackoverflow.com/questions/72751904/firebase-authentication-is-not-working-on-android-12-targeting-s-requires-that
    implementation "com.google.android.gms:play-services-auth:20.2.0"

    implementation "androidx.work:work-runtime-ktx:$work_version"
    androidTestImplementation "androidx.work:work-testing:$work_version"
    implementation "androidx.work:work-multiprocess:$work_version"
    implementation 'androidx.hilt:hilt-work:1.0.0'

    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    implementation 'androidx.hilt:hilt-navigation-compose:1.0.0'

    def nav_version = "2.5.1"
    implementation "androidx.navigation:navigation-compose:$nav_version"

    // Stay on version 1.1.6 until Android Studio Dolphin released with JDK 11 support
    //noinspection GradleDependency
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:1.1.6'

    def appsearch_version = "1.1.0-alpha01"
    implementation "androidx.appsearch:appsearch:$appsearch_version"
    kapt project(':appsearch-compiler')
    implementation "androidx.appsearch:appsearch-local-storage:$appsearch_version"

    def paging_version = "3.1.1"
    implementation "androidx.paging:paging-runtime:$paging_version"
    testImplementation "androidx.paging:paging-common:$paging_version"
    implementation "androidx.paging:paging-compose:1.0.0-alpha15"
    implementation "androidx.concurrent:concurrent-futures-ktx:1.1.0"

    implementation "io.coil-kt:coil-compose:2.1.0"

    implementation "androidx.datastore:datastore:1.0.0"
    implementation "com.google.protobuf:protobuf-javalite:3.21.4"

    implementation "com.google.accompanist:accompanist-placeholder-material:0.26.0-alpha"
    implementation "com.google.accompanist:accompanist-flowlayout:0.26.0-alpha"

    implementation project(':shared')
}

dokkaHtmlPartial {
    moduleName.set("App")

    dokkaSourceSets {
        configureEach {
            includes.from("README.md")
        }
    }
}

koverMerged {
    enable()
}